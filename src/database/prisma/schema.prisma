enum PaymentMethod {
  paystack
}

enum OrderStatus {
  pending
  ordered
  shipped
  delivered
}

enum UserRole {
  admin
  customer
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id              String           @id @default(uuid())
  email           String           @unique
  password        String
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @default(now())
  orders          Order[]
  shippingDetails ShippingDetail[]
  role            UserRole          @default(customer)

  phone   String @default("N/A")
  address String @default("N/A")

  firstName String @default("N/A")
  lastName  String @default("N/A")
}

model Order {
  id            String        @id @default(uuid())
  userId        String
  user          User          @relation(fields: [userId], references: [id])
  status        OrderStatus   @default(pending)
  total         Float
  createdAt     DateTime      @default(now())
  fullName      String        @default("n/a")
  phoneNumber   String        @default("n/a")
  email         String        @default("n/a")
  street        String        @default("n/a")
  city          String        @default("n/a")
  state         String        @default("n/a")
  postalCode    String        @default("n/a")
  paymentMethod PaymentMethod @default(paystack)
  updatedAt     DateTime      @updatedAt  @default(now())

  items OrderItem[]
}

model OrderItem {
  id              String   @id @default(uuid()) // ðŸ‘ˆ UUID instead of autoincrement
  productLink     String
  productName     String
  details         String
  quantity        Int      @default(1)
  price           Float    @default(0)
  referenceNumber String
  estimatedWeight String
  image           String   @default("/placeholder.svg")
  createdAt       DateTime @default(now())

  currency     String @default("GBP") // ðŸ‘ˆ new field
  priceInNaira Float  @default(0) // ðŸ‘ˆ new field

  // Optional relation to Order
  orderId String?
  order   Order?  @relation(fields: [orderId], references: [id])
}

model ShippingDetail {
  id            String        @id @default(uuid())
  userId        String
  fullName      String
  phoneNumber   String
  email         String
  street        String
  city          String
  state         String
  postalCode    String
  saveAsDefault Boolean       @default(false)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  user User @relation(fields: [userId], references: [id])
}
